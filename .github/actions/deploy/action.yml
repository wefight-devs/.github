name: 'Deploy'
description: 'Deploy'

inputs:
  environment:
    required: true
    description: "Environment"
  ARTIFACT_TOKEN:
    required: true
    description: "Artifact token"

runs:
  using: "composite"
  steps:
    # Checkout project
    - uses: actions/checkout@v3
      with:
        path: main

    # Setup buildx
    - name: "Buildx"
      shell: bash
      run: docker buildx create --use

    # Build dev
    - name: "Build development"
      if: ${{ inputs.environment == 'development' }}
      shell: bash
      run: |
        docker buildx build \
        -t ${{ env.IMAGE_REF }} \
        --build-arg ARTIFACT_TOKEN=${{ inputs.ARTIFACT_TOKEN }} \
        --platform=linux/amd64 \
        --target=${{ env.DOCKER_BUILD_TARGET }} \
        --push main

    # Build staging
    - name: "Build staging"
      if: ${{ inputs.environment == 'staging' }}
      shell: bash
      run: |
        echo "Do nothing for the moment"
      # docker buildx build \
      # --cache-from=${{ env.IMAGE_REF }} \
      # --build-arg ARTIFACT_TOKEN=${{ inputs.ARTIFACT_TOKEN }} \
      # -t ${{ env.IMAGE_REF }}-staging \
      # --platform=linux/amd64 \
      # --target=${{ env.DOCKER_BUILD_TARGET }} \
      # --push main

    # Build production
    - name: "Build production"
      if: ${{ inputs.environment == 'production' }}
      shell: bash
      run: |
        curl -X POST -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ github.token }}" "${{ github.api_url }}/repos/wefight-devs/kubernetes-resources/actions/workflows/trigger_new_tag.yml/dispatches" -d '{"ref":"master","inputs":{"environment":"production", "imageName":"${{ env.IMAGE_NAME }}", "imageTag": "${{ env.IMAGE_TAG }}"}}'
      # docker buildx build \
      # --cache-from=${{ env.IMAGE_REF }}-dev \
      # --build-arg ARTIFACT_TOKEN=${{ inputs.ARTIFACT_TOKEN }} \
      # -t ${{ env.IMAGE_REF }} \
      # --platform=linux/amd64 \
      # --target=${{ env.DOCKER_BUILD_TARGET }} \
      # --push main